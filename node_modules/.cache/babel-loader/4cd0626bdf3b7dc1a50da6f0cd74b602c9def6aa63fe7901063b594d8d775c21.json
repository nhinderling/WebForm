{"ast":null,"code":"var _jsxFileName = \"/Users/mizga/my-app/src/Components/WebForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './WebForm.css';\nimport './Confirmation.css';\nimport './BaseLayout.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// \"STATIC\" DATA //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allPossibleTimes = []; // opening hours\nfor (let hour = 8; hour < 19; hour++) {\n  const time = hour < 10 ? `0${hour}:00` : `${hour}:00`;\n  allPossibleTimes.push(time);\n}\nconst currentDate = new Date();\ncurrentDate.setDate(currentDate.getDate() + 1); // day after today\n\n// WEBFORM //\n\nfunction WebForm() {\n  _s();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [submittedData, Submission] = useState({});\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [state, setState] = useState({\n    isSubmitted: false,\n    submittedData: {},\n    selectedDate: null,\n    availableTimes: [],\n    formData: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      numberOfPeople: '',\n      date: currentDate,\n      time: '',\n      comments: ''\n    }\n  });\n  const ResetForm = () => {\n    setState({\n      isSubmitted: false,\n      submittedData: {},\n      selectedDate: null,\n      availableTimes: [],\n      formData: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        numberOfPeople: '',\n        date: currentDate,\n        time: '',\n        comments: ''\n      }\n    });\n  };\n  const handleChange = event => {\n    // Change of inputs\n    const {\n      name,\n      value\n    } = event.target;\n    setState(prevState => ({\n      ...prevState,\n      formData: {\n        ...prevState.formData,\n        [name]: value\n      }\n    }));\n  };\n  const handleDateChange = async date => {\n    // Change of Data input\n    try {\n      setState(prevState => ({\n        ...prevState,\n        selectedDate: date\n      }));\n      // Update the selected date\n      setSelectedDate(date);\n\n      // Fetch filtered submissions data and wait for it to resolve\n\n      const filteredSubmissionsData = await fetchFilteredSubmissions();\n      const selectedDateString = date.toISOString().substring(0, 10);\n      const bookedTimes = filteredSubmissionsData[selectedDateString] || [];\n      const updatedAvailableTimes = allPossibleTimes.filter(time => !bookedTimes.includes(time));\n      setState(prevState => ({\n        ...prevState,\n        availableTimes: updatedAvailableTimes,\n        formData: {\n          ...prevState.formData,\n          date: date.toISOString().substring(0, 10)\n        }\n      }));\n    } catch (error) {\n      console.error('Error handling date change:', error);\n    }\n  };\n  const notAvailableDate = date => {\n    // on Sundays we are closed\n    return date.getDay() === 0;\n  };\n\n  // SUBMISSION OF DATA //\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:5000/submit-form', {\n        // Replace with your backend URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(state)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      console.log(responseData);\n    } catch (error) {\n      console.error('There was an error submitting the form:', error);\n    }\n    setState(prevState => ({\n      ...prevState,\n      isSubmitted: true,\n      submittedData: {\n        ...prevState.formData\n      }\n    }));\n  };\n\n  // FETCH FILTERED DATA //\n\n  const fetchFilteredSubmissions = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/view-filtered-submissions'); // Replace with your backend URL\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const filteredSubmissionsData = await response.json();\n      return filteredSubmissionsData;\n    } catch (error) {\n      console.error('Error fetching filtered submissions:', error);\n      return null;\n    }\n  };\n\n  // RETURN //\n\n  // Confirmation Page //\n  if (isSubmitted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"We have received your request!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Thank you, \", submittedData.firstName, \" \", submittedData.lastName, \", for your interest.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" We will get back to you shortly to confirm your booking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"CenterForm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DetailsGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"your booking details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Detail, {\n            label: \"Email\",\n            value: submittedData.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Detail, {\n            label: \"Number of People\",\n            value: submittedData.numberOfPeople\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Detail, {\n            label: \"Date\",\n            value: submittedData.date.toString().substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Detail, {\n            label: \"Time\",\n            value: submittedData.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Detail, {\n            label: \"Comments\",\n            value: submittedData.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 8\n      }, this), renderButton('Make Another Reservation', ResetForm)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Submission Page, Default Page //\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Laser Tag Super Fun\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can book your session here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"CenterForm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [renderFormGroup('First Name', 'text', 'firstName', state.firstName, handleChange, true, 1), renderFormGroup('Last Name', 'text', 'lastName', state.lastName, handleChange, true, 1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), renderFormGroup('Email Address', 'email', 'email', state.email, handleChange, true, 1), renderFormGroup('Number of People', 'number', 'numberOfPeople', state.numberOfPeople, handleChange, true, 1), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Date\", /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: selectedDate,\n              onChange: date => handleDateChange(date),\n              filterDate: date => !notAvailableDate(date),\n              minDate: currentDate,\n              dateFormat: \"yyyy-MM-dd\",\n              placeholderText: \"yyyy-MM-dd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group \",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Time \", /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"time\",\n              value: state.time,\n              onChange: handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), state.availableTimes.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: time,\n                children: time\n              }, time, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), renderFormGroup('Additional Comments', 'textarea', 'comments', state.comments, handleChange, false, 4), renderButton('Submit Reservation')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n// RETURN FUNCTIONS // \n_s(WebForm, \"1UEc2OMg07K28AzIFCL20Wi4zn4=\");\n_c = WebForm;\nfunction Detail({\n  label,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"details\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [label, \": \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Detail;\nconst renderFormGroup = (label, type, name, value, onChange, required, rows) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-group\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"required\",\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this), type === 'textarea' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n    name: name,\n    value: value,\n    onChange: onChange,\n    rows: rows,\n    required: required\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    name: name,\n    value: value,\n    onChange: onChange,\n    required: required,\n    min: type === 'number' ? 1 : undefined //set min number of people to 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 244,\n  columnNumber: 3\n}, this);\nconst renderButton = (label, onClick) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"button-container\",\n  children: /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"submit-button\",\n    onClick: onClick,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 268,\n  columnNumber: 3\n}, this);\nexport default WebForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"WebForm\");\n$RefreshReg$(_c2, \"Detail\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","allPossibleTimes","hour","time","push","currentDate","Date","setDate","getDate","WebForm","_s","isSubmitted","setIsSubmitted","submittedData","Submission","selectedDate","setSelectedDate","state","setState","availableTimes","formData","firstName","lastName","email","numberOfPeople","date","comments","ResetForm","handleChange","event","name","value","target","prevState","handleDateChange","filteredSubmissionsData","fetchFilteredSubmissions","selectedDateString","toISOString","substring","bookedTimes","updatedAvailableTimes","filter","includes","error","console","notAvailableDate","getDay","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","Detail","label","toString","renderButton","onSubmit","renderFormGroup","selected","onChange","filterDate","minDate","dateFormat","placeholderText","required","map","_c","_c2","type","rows","min","undefined","onClick","$RefreshReg$"],"sources":["/Users/mizga/my-app/src/Components/WebForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './WebForm.css';\nimport './Confirmation.css';\nimport './BaseLayout.css'\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n// \"STATIC\" DATA //\n\nconst allPossibleTimes = []; // opening hours\n  for (let hour = 8; hour < 19; hour++) {\n   const time = hour < 10 ? `0${hour}:00` : `${hour}:00`;\n   allPossibleTimes.push(time);\n  }\n\nconst currentDate = new Date(); \ncurrentDate.setDate(currentDate.getDate() + 1); // day after today\n\n// WEBFORM //\n\nfunction WebForm() {\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [submittedData, Submission] = useState({});\n\n  const [selectedDate, setSelectedDate] = useState(null);\n\n \n  const [state, setState] = useState({\n    isSubmitted: false,\n    submittedData: {},\n    selectedDate: null,\n    availableTimes: [],\n    formData: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      numberOfPeople: '',\n      date: currentDate,\n      time: '',\n      comments: '',\n    },\n  });\n\n  const ResetForm = () => {\n    setState({\n      isSubmitted: false,\n      submittedData: {},\n      selectedDate: null,\n      availableTimes: [],\n      formData: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        numberOfPeople: '',\n        date: currentDate,\n        time: '',\n        comments: '',\n      },\n    });\n  };\n\n\n  const handleChange = (event) => { // Change of inputs\n    const { name, value } = event.target;\n    setState((prevState) => ({\n      ...prevState,\n      formData: {\n        ...prevState.formData,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleDateChange = async (date) => { // Change of Data input\n    try {\n\n  \n         setState((prevState) => ({\n          ...prevState,\n          selectedDate: date,\n        }));\n      // Update the selected date\n      setSelectedDate(date);\n  \n      // Fetch filtered submissions data and wait for it to resolve\n\n      const filteredSubmissionsData = await fetchFilteredSubmissions();\n      const selectedDateString = date.toISOString().substring(0, 10);\n      const bookedTimes = filteredSubmissionsData[selectedDateString] || [];\n      const updatedAvailableTimes = allPossibleTimes.filter((time) => !bookedTimes.includes(time));\n\n      setState((prevState) => ({\n        ...prevState,\n        availableTimes: updatedAvailableTimes,\n        formData: {\n          ...prevState.formData,\n          date: date.toISOString().substring(0, 10),\n        },\n      }));\n    } catch (error) {\n      console.error('Error handling date change:', error);\n    }\n  };\n\n  const notAvailableDate = (date) => { // on Sundays we are closed\n      return date.getDay() === 0;\n  };\n\n\n  // SUBMISSION OF DATA //\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:5000/submit-form', { // Replace with your backend URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(state),\n\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const responseData = await response.json();\n      console.log(responseData); \n    } catch (error) {\n      console.error('There was an error submitting the form:', error);\n    }\n   \n    setState((prevState) => ({\n      ...prevState,\n      isSubmitted: true,\n      submittedData: { ...prevState.formData },\n    }));\n    \n  };\n\n  // FETCH FILTERED DATA //\n\n  const fetchFilteredSubmissions = async () => { \n    try {\n      const response = await fetch('http://127.0.0.1:5000/view-filtered-submissions'); // Replace with your backend URL\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const filteredSubmissionsData = await response.json();\n      return filteredSubmissionsData;\n    } catch (error) {\n      console.error('Error fetching filtered submissions:', error);\n      return null;\n    }\n\n  };\n\n  // RETURN //\n\n  // Confirmation Page //\n  if (isSubmitted) {\n    return (\n      <div className=\"form\">\n        <div className=\"header\">\n          <h4>We have received your request!</h4>\n          <p>Thank you, {submittedData.firstName} {submittedData.lastName}, for your interest.</p>\n          <p> We will get back to you shortly to confirm your booking.</p>\n       </div>\n       <div class=\"CenterForm\">\n        <div className=\"DetailsGroup\">\n          <h6>your booking details</h6>\n            <Detail label=\"Email\" value={submittedData.email} />\n            <Detail label=\"Number of People\" value={submittedData.numberOfPeople} />\n            <Detail label=\"Date\" value={submittedData.date.toString().substring(0,10)} />\n            <Detail label=\"Time\" value={submittedData.time} />\n            <Detail label=\"Comments\" value={submittedData.comments} />\n          </div>\n        </div>\n        {renderButton('Make Another Reservation', ResetForm)}\n      </div>\n    );\n  }\n\n  // Submission Page, Default Page //\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div className=\"header\">\n        <h1>Laser Tag Super Fun</h1>\n        <p>You can book your session here!</p>\n      </div>\n      <div class=\"CenterForm\">\n        <div className=\"allInput\">\n          <div className=\"form-row\">\n          {renderFormGroup('First Name', 'text', 'firstName', state.firstName, handleChange, true,1)}\n          {renderFormGroup('Last Name', 'text', 'lastName', state.lastName, handleChange, true,1)}\n          </div>\n\n          {renderFormGroup('Email Address', 'email', 'email', state.email, handleChange, true,1)}\n          {renderFormGroup('Number of People', 'number', 'numberOfPeople', state.numberOfPeople, handleChange,  true,1)}\n\n          <div className=\"form-row\">\n            <div className=\"form-group\">\n              <label>Date<span class=\"required\">*</span></label>\n              <DatePicker \n                selected={selectedDate}\n                onChange={date => handleDateChange(date)}\n                filterDate={date => !notAvailableDate(date)}\n                minDate={currentDate}\n                dateFormat=\"yyyy-MM-dd\"\n                placeholderText=\"yyyy-MM-dd\" \n              />\n            </div>\n            <div className=\"form-group \">\n              <label>Time <span class=\"required\">*</span></label>\n              <select name=\"time\" value={state.time} onChange={handleChange} required>\n                <option value=\"\"></option>\n                {state.availableTimes.map((time) => (\n                  <option key={time} value={time}>{time}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {renderFormGroup('Additional Comments', 'textarea', 'comments', state.comments, handleChange,false, 4)}\n          {renderButton('Submit Reservation', )}\n        </div>\n      </div>\n    </form>\n  );\n      \n}\n\n// RETURN FUNCTIONS // \n\nfunction Detail({ label, value }) {\n  return (\n    <section className=\"details\">\n      <p>{label}: {value}</p>\n    </section>\n  );\n}\n\nconst renderFormGroup = (label, type, name, value, onChange,required,rows) => (\n  <div className=\"form-group\">\n    <label>{label}{required && <span className=\"required\">*</span>}</label>\n    {type === 'textarea' ? (\n        <textarea\n          name={name}\n          value={value}\n          onChange={onChange}\n          rows={rows}\n          required={required}\n        ></textarea>\n      ) : (\n        <input\n          type={type}\n          name={name}\n          value={value}\n          onChange={onChange}\n          required={required}\n          min={type === 'number' ? 1 : undefined} //set min number of people to 1\n        />\n      )}\n  </div>\n);\n\nconst renderButton = (label, onClick) => (\n  <div className=\"button-container\">\n    <button className=\"submit-button\" onClick={onClick}>{label}</button>\n  </div>\n);\n\nexport default WebForm;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}